{% extends "base.djhtml" %}

{% block body %}
    <div id="fb-root"></div>
    <script>
     // Additional JS functions here
     var channelPath = '//' + window.location.host + '/static/channel.html';
     var loggedInPrev = false;
     userID = null;
     statuses = new Statuses();
     window.fbAsyncInit = function() {
       FB.init({
         appId      : '452485954871398', // App ID
         channelUrl : channelPath, // Channel File
         status     : true, // check login status
         cookie     : true, // enable cookies to allow the server to access the session
         xfbml      : true  // parse XFBML
       });

       // Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
       // for any authentication related change, such as login, logout or session refresh. This means that
       // whenever someone who was previously logged out tries to log in again, the correct case below 
       // will be handled. 
       FB.Event.subscribe('auth.authResponseChange', function(response) {
         // Here we specify what we do with the response anytime this event occurs. 
         if (response.status === 'connected') {
           // The response object is returned with a status field that lets the app know the current
           // login status of the person. In this case, we're handling the situation where they 
           // have logged in to the app.
           loggedInPrev = true;
           userID = response.authResponse.userID;

           $.ajax({
             type: "POST",
             url: '/fbauth/',
             data: {userid: response.authResponse.userID,
                    authtoken: response.authResponse.accessToken,
                    expiry: response.authResponse.expiresIn
                    },
             beforeSend: function(xhr){
               var token = $('meta[name="csrf-token"]').attr('content');
               xhr.setRequestHeader('X-CSRFToken', token);
             },
             success: function (data, textStatus, jqXHR) {
               console.log(data);
               $('.not-logged-in').hide();
               $('.logged-in').show();

               statuses.fetch({
                 data: {userid: userID},
                 success: function(collection, response, options) {
                   for (var i = 0; i < collection.models.length; i++) {
                     var el = $('<div class="unit" />');
                     $('#statuses').append(el);
                     var v = new StatusView({model: collection.models[i], el: el});
                   }
                 },
               });

             }
           });
         } else if (response.status === 'not_authorized') {
           // In this case, the person is logged into Facebook, but not into the app, so we call
           // FB.login() to prompt them to do so. 
           // In real-life usage, you wouldn't want to immediately prompt someone to login 
           // like this, for two reasons:
           // (1) JavaScript created popup windows are blocked by most browsers unless they 
           // result from direct interaction from people using the app (such as a mouse click)
           // (2) it is a bad experience to be continually prompted to login upon page load.
           if (! loggedInPrev) {
             FB.login(function (response) {},
                      {scope: 'publish_actions'});
           }
         } else {
           // In this case, the person is not logged into Facebook, so we call the login() 
           // function to prompt them to do so. Note that at this stage there is no indication
           // of whether they are logged into the app. If they aren't then they'll see the Login
           // dialog right after they log in to Facebook. 
           // The same caveats as above apply to the FB.login() call here.
           if (! loggedInPrev) {
             FB.login(function (response) {},
                      {scope: 'publish_actions'});
           }
         }
       });


     };

     // Load the SDK asynchronously
     (function(d){
       var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
       if (d.getElementById(id)) {return;}
       js = d.createElement('script'); js.id = id; js.async = true;
       js.src = "//connect.facebook.net/en_US/all.js";
       ref.parentNode.insertBefore(js, ref);
     }(document));
    </script>

    <div class="container not-logged-in wrap">
      <div class="center">
        <h1 class="title text-center">Mull It Over</h1>
        <h2 class="text-center">Pause, Think, Reflect</h2>
        <div class="paragraph">So much of our daily life on the internet is fast paced: we see something - we immediately post it on a social network; we hear something - we immediately post it on a social network; we feel something - we immediately post it on a social network.</div>
        <div class="paragraph"><strong>What would happen if we slowed down?</strong> Would we have more thought-out posts, status updates and tweets? Would we have a more personal and interesting internet?</div>
        <div class="paragraph">That's where <span class="logo">Mull it Over</span> comes in. Instead of hitting post right away, if you post through <span class="logo">Mull it Over</span> there is a mandatory 8 hour waiting period before you can post your status update to Facebook. But at the same time, we don't want you to forget about your post, so we make sure to post it for you after 24 hours. During this maturation period you are encouraged to edit your post again and again. The goal is that we want <strong>your</strong> voice to come out on the internet; we want to hear what <strong>you</strong> have to say.</div>
        <div class="paragraph">What do you have to lose? Give it a whirl.</div>
        <div class="text-center" id="fb-button">
          <fb:login-button perms="publish_actions" width="300" max-rows="2"></fb>
        </div>
      </div>
    </div>

    <div class="contianer logged-in wrap" style="display:none;">
      <div class="navbar navbar-inverse navbar-static-top">
        <div class="center-navbar">
          <div class="navbar-header logo">
            <a class="navbar-brand" href="#">Mull It Over</a>
          </div>
          <div class="collapse navbar-collapse">
            <ul class="nav navbar-nav navbar-right">
              <li><a href="#" id="logout">Logout</a></li>
            </ul>
          </div>
        </div>
      </div>

      <div class="center">

        <div class="panel panel-default" id="new-status">
          <div class="panel-body new-post">
            <span class="glyphicon glyphicon-plus" id="plus"></span>
          </div>
        </div>

        <div id="statuses"></div>

      </div>
    </div>


    <div id="footer">
      <div class="container">
        <p class="text-muted credit">Design and built with love by <a href="http://twitter.com/etanz">@etanz</a> at the NYC Facebook Hackathon. <a href="//github.com/etanzapinsky/mullitover">Source on Github</a>.</p>
      </div>
    </div>


{% endblock %}
