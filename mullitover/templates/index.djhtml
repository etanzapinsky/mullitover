{% extends "base.djhtml" %}

{% block body %}
    <div id="fb-root"></div>
    <script>
     // Additional JS functions here
     var channelPath = '//' + window.location.host + '/static/channel.html';
     var loggedInPrev = false;
     userID = null;
     statuses = new Statuses();
     window.fbAsyncInit = function() {
       FB.init({
         appId      : '452485954871398', // App ID
         channelUrl : channelPath, // Channel File
         status     : true, // check login status
         cookie     : true, // enable cookies to allow the server to access the session
         xfbml      : true  // parse XFBML
       });

       // Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
       // for any authentication related change, such as login, logout or session refresh. This means that
       // whenever someone who was previously logged out tries to log in again, the correct case below 
       // will be handled. 
       FB.Event.subscribe('auth.authResponseChange', function(response) {
         // Here we specify what we do with the response anytime this event occurs. 
         if (response.status === 'connected') {
           // The response object is returned with a status field that lets the app know the current
           // login status of the person. In this case, we're handling the situation where they 
           // have logged in to the app.
           loggedInPrev = true;
           userID = response.authResponse.userID;

           $.ajax({
             type: "POST",
             url: '/fbauth/',
             data: {userid: response.authResponse.userID,
                    authtoken: response.authResponse.accessToken,
                    expiry: response.authResponse.expiresIn
                    },
             beforeSend: function(xhr){
               var token = $('meta[name="csrf-token"]').attr('content');
               xhr.setRequestHeader('X-CSRFToken', token);
             },
             success: function (data, textStatus, jqXHR) {
               console.log(data);
               $('.not-logged-in').hide();
               $('.logged-in').show();

               statuses.fetch({
                 data: {userid: userID},
                 success: function(collection, response, options) {
                   for (var i = 0; i < collection.models.length; i++) {
                     var el = $('<div/>');
                     $('#statuses').append(el);
                     var v = new StatusView({model: collection.models[i], el: el});
                   }
                 },
               });

             }
           });
         } else if (response.status === 'not_authorized') {
           // In this case, the person is logged into Facebook, but not into the app, so we call
           // FB.login() to prompt them to do so. 
           // In real-life usage, you wouldn't want to immediately prompt someone to login 
           // like this, for two reasons:
           // (1) JavaScript created popup windows are blocked by most browsers unless they 
           // result from direct interaction from people using the app (such as a mouse click)
           // (2) it is a bad experience to be continually prompted to login upon page load.
           if (! loggedInPrev) {
             FB.login(function (response) {},
                      {scope: 'publish_actions'});
           }
         } else {
           // In this case, the person is not logged into Facebook, so we call the login() 
           // function to prompt them to do so. Note that at this stage there is no indication
           // of whether they are logged into the app. If they aren't then they'll see the Login
           // dialog right after they log in to Facebook. 
           // The same caveats as above apply to the FB.login() call here.
           if (! loggedInPrev) {
             FB.login(function (response) {},
                      {scope: 'publish_actions'});
           }
         }
       });


     };

     // Load the SDK asynchronously
     (function(d){
       var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
       if (d.getElementById(id)) {return;}
       js = d.createElement('script'); js.id = id; js.async = true;
       js.src = "//connect.facebook.net/en_US/all.js";
       ref.parentNode.insertBefore(js, ref);
     }(document));
    </script>

    <div class="container not-logged-in">
      <div class="center text-center">
        <h1 class="title">Mull It Over</h1>
        <h3>Pause, Think, Reflect</h3>
        <fb:login-button perms="publish_actions" width="300" max-rows="2"></fb>
      </div>
    </div>

    <div class="navbar navbar-inverse navbar-static-top logged-in" style="display:none;">
      <div class="container">
        <div class="navbar-header"  id="brand">
          <a class="navbar-brand" href="/">Mull It Over</a>
        </div>
        <div class="collapse navbar-collapse">
          <ul class="nav navbar-nav navbar-right">
            <li><a href="#" id="logout">Logout</a></li>
          </ul>
        </div>
      </div>
    </div>


    <div class="contianer logged-in" style="display:none;">
      <div class="center">
        <h2>Active Statuses</h2>

        <div class="panel panel-default" id="new-status">
          <div class="panel-body new-post">
            <span class="glyphicon glyphicon-plus"></span>
          </div>
        </div>

        <div id="statuses"></div>

      </div>
    </div>



{% endblock %}
